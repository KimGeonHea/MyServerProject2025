// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Game;

#nullable disable

namespace GameServer.Migrations
{
    [DbContext(typeof(GameDbContext))]
    partial class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Server.Game.GachaDb", b =>
                {
                    b.Property<int>("GachaDbId")
                        .HasColumnType("int");

                    b.Property<int>("PityCount")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("GachaDbId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Gacha");
                });

            modelBuilder.Entity("Server.Game.HeroDb", b =>
                {
                    b.Property<int>("HeroDbId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnchantCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastAcquiredAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PlayerDbId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SeenAcquiredUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("HeroDbId");

                    b.HasIndex("PlayerDbId");

                    b.ToTable("Hero");
                });

            modelBuilder.Entity("Server.Game.ItemDb", b =>
                {
                    b.Property<long>("ItemDbId")
                        .HasColumnType("bigint");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("DbState")
                        .HasColumnType("int");

                    b.Property<int>("EnchantCount")
                        .HasColumnType("int");

                    b.Property<int>("EquipSlot")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastAcquiredAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PlayerDbId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SeenAcquiredUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("ItemDbId");

                    b.HasIndex("PlayerDbId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Server.Game.PlayerDb", b =>
                {
                    b.Property<int>("PlayerDbId")
                        .HasColumnType("int");

                    b.Property<long>("AccountDbId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Diamond")
                        .HasColumnType("int");

                    b.Property<int>("Energy")
                        .HasColumnType("int");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("InventoryCapacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastDailyRewardTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEnergyGivenTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZoneId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalExp")
                        .HasColumnType("int");

                    b.Property<int>("WeekStartDay")
                        .HasColumnType("int");

                    b.Property<int>("WeeklyRewardFlags")
                        .HasColumnType("int");

                    b.HasKey("PlayerDbId");

                    b.HasIndex("AccountDbId")
                        .IsUnique();

                    b.ToTable("Player");
                });

            modelBuilder.Entity("Server.Game.GachaDb", b =>
                {
                    b.HasOne("Server.Game.PlayerDb", "Owner")
                        .WithMany()
                        .HasForeignKey("PlayerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Server.Game.HeroDb", b =>
                {
                    b.HasOne("Server.Game.PlayerDb", "Owner")
                        .WithMany("Heros")
                        .HasForeignKey("PlayerDbId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Server.Game.ItemDb", b =>
                {
                    b.HasOne("Server.Game.PlayerDb", "Owner")
                        .WithMany("Items")
                        .HasForeignKey("PlayerDbId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Server.Game.PlayerDb", b =>
                {
                    b.Navigation("Heros");

                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
